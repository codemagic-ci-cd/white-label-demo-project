definitions:
  env_versions: &env_versions
    flutter: stable
    xcode: 14.1
    cocoapods: default    
  ios_groups: &ios_groups
    groups:
      # - ios_credentials
      - aws_credentials
      - cm_credentials  # Includes (CM_API_KEY) for triggering Codemagic builds via API requests
  android_groups: &android_groups
    groups:
      - playstore_credentials # Includes (GCLOUD_SERVICE_ACCOUNT_CREDENTIALS) for only validating the intial workflow
      - aws_credentials
      - cm_credentials  # Includes (CM_API_KEY) for triggering Codemagic builds via API requests
  env_vars: &env_vars
    S3_BUCKET_NAME: cmwhitelabel
    CLIENT_ASSETS_FOLDER: client_assets
    ANDROID_ASSETS_FOLDER: android_assets
    IOS_ASSETS_FOLDER: ios_assets  
  xcode_env_vars: &xcode_env_vars
    XCODE_WORKSPACE: "ios/Runner.xcworkspace"
    XCODE_SCHEME: "Runner"    
  labels: &labels
    labels:
      - RELEASE
      - ${CLIENT_ID}      
  trigger_feature_pr: &trigger_feature_pr
    events:
      - pull_request
    branch_patterns:
      - pattern: develop
        include: true
        source: false
  trigger_dev: &trigger_dev
    events:
      - push
    branch_patterns:
      - pattern: develop
  trigger_qa: &trigger_qa
    events:
      - pull_request
    branch_patterns:
      - pattern: qa
        include: true
        source: true
  trigger_trigger: &trigger_trigger
    events:
      - pull_request
    branch_patterns:
      - pattern: trigger
        include: true
        source: true             
  scripts:
    - &install_dependencies
      name: Install dependencies
      script: flutter packages pub get
    - &unit_tests
      name: Unit tests
      script: |
        mkdir -p test-results
        flutter test --machine > test-results/flutter.json
    - &get_assets
      name: Get assets from AWS S3 bucket
      script: |
        echo "Client ID: ${CLIENT_ID}"
        aws s3 cp s3://$S3_BUCKET_NAME/assets_${CLIENT_ID}.zip assets.zip
        unzip assets.zip -d $CLIENT_ASSETS_FOLDER
    - &set_image
      name: Set main image
      script: |
        rm -rf assets/hero.png
        cp -r ./$CLIENT_ASSETS_FOLDER/hero.png assets/hero.png
    - &set_client_id
      name: Set client id
      script: |
        cp -r ./$CLIENT_ASSETS_FOLDER/client.env assets/client.env
    - &slack_publishing
      name: Publish to Slack
      script: |
        # This is an alternative to using Codemagic's out of the box Slack notifications.

        ARTIFACT_URL=$(echo $CM_ARTIFACT_LINKS | jq -r '.[] | select(.name | endswith("'".ipa"'")) | .url')

        curl -0 -v -X POST $SLACK_WEBHOOK_URL \
        -H 'Content-type: application/json' \
        --data-raw '
        {
            "attachments": [
              {
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "Build with build id: <https://codemagic.io/app/'"$CM_PROJECT_ID"'/build/'"$CM_BUILD_ID"'>"
                    }
                  },
                  {
                    "type": "divider"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "Client ID: '"$CLIENT_ID"'"
                    }
                  },
                  {
                    "type": "divider"
                  },
                  {
                    "type": "section",
                    "text": {
                    "type": "mrkdwn",
                    "text": "*iOS ipa* <'"$ARTIFACT_URL"'|Download>"
                    }
                  },
                ]
              }
            ]
          }'      

  android_scripts:
    - &set_android_variables
      name: Set Android environment variables from settings.env
      script: |
        source ./$CLIENT_ASSETS_FOLDER/settings.env

        echo "PACKAGE_NAME=$PACKAGE_NAME" >> $CM_ENV

        echo "CM_KEYSTORE_PASSWORD=$CM_KEYSTORE_PASSWORD" >> $CM_ENV
        echo "CM_KEY_PASSWORD=$CM_KEY_PASSWORD" >> $CM_ENV
        echo "CM_KEY_ALIAS=$CM_KEY_ALIAS" >> $CM_ENV
        echo "CM_KEYSTORE_PATH=$CM_KEYSTORE_PATH" >> $CM_ENV

        echo 'GCLOUD_SERVICE_ACCOUNT_CREDENTIALS<<DELIMITER' >> $CM_ENV
        echo "$GCLOUD_SERVICE_ACCOUNT_CREDENTIALS" >> $CM_ENV
        echo 'DELIMITER' >> $CM_ENV
    - &set_package_name
      name: Set Package name
      script: |
        flutter pub add change_app_package_name
        flutter pub run change_app_package_name:main $PACKAGE_NAME
    - &change_android_icons
      name: Change Android icons
      script: |
        cp -r ./$CLIENT_ASSETS_FOLDER/$ANDROID_ASSETS_FOLDER/* ./android/app/src/main/res
    - &android_code_signing
      name: Set up key.properties
      script: | 
        cat >> "$CM_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$CM_KEYSTORE_PASSWORD
        keyPassword=$CM_KEY_PASSWORD
        keyAlias=$CM_KEY_ALIAS
        storeFile=$CM_KEYSTORE_PATH
        EOF         
    - &build_apk
      name: Flutter build apk
      script: |
        flutter build apk --release
    - &build_aab
      name: Flutter build aab and automatic versioning
      script: |
        # BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))
        BUILD_NUMBER=4 # to be deleted
        flutter build appbundle --release \
        --build-name=1.0.$BUILD_NUMBER \
        --build-number=$BUILD_NUMBER
  ios_scripts:
    - &set_ios_variables
      name: Set iOS environment variables from settings.env
      script: |
        source ./$CLIENT_ASSETS_FOLDER/settings.env

        echo "APP_STORE_CONNECT_KEY_IDENTIFIER=$APP_STORE_CONNECT_KEY_IDENTIFIER" >> $CM_ENV
        echo "APP_STORE_CONNECT_ISSUER_ID=$APP_STORE_CONNECT_ISSUER_ID" >> $CM_ENV

        echo "BUNDLE_ID=$BUNDLE_ID" >> $CM_ENV
        echo "APP_STORE_ID=$APP_STORE_ID" >> $CM_ENV

        echo "APP_STORE_CONNECT_PRIVATE_KEY<<DELIMITER" >> $CM_ENV
        echo "$APP_STORE_CONNECT_PRIVATE_KEY" >> $CM_ENV
        echo "DELIMITER" >> $CM_ENV

        echo "CERTIFICATE_PRIVATE_KEY<<DELIMITER" >> $CM_ENV
        echo "$CERTIFICATE_PRIVATE_KEY" >> $CM_ENV
        echo "DELIMITER" >> $CM_ENV

    - &install_pods
      name: Install pods
      script: find . -name "Podfile" -execdir pod install \;
    - &ios_code_signing
      name: iOS code signing
      script: |
        keychain initialize
        app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
        keychain add-certificates
        xcode-project use-profiles
    - &build_ipa
      name: Flutter build ipa and automatic versioning
      script: |
        BUILD_NUMBER=$$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1))
        flutter build ipa --release \
        --build-name=1.0.$BUILD_NUMBER \
        --build-number=$BUILD_NUMBER\
        --export-options-plist=/Users/builder/export_options.plist
    - &set_bundle_id
      name: Set bundle id
      script: |
        PBXPROJ=$CM_BUILD_DIR/ios/Runner.xcodeproj/project.pbxproj
        sed -i.bak "s/\$BASE_BUNDLE_ID/$BUNDLE_ID/g" $PBXPROJ
    - &change_ios_icons
      name: Change iOS icons
      script: |
        rm -rf ios/Runner/Assets.xcassets/AppIcon.appiconset
        cp -r ./$CLIENT_ASSETS_FOLDER/$IOS_ASSETS_FOLDER ios/Runner/Assets.xcassets/

  ios_app_store_publish: &ios_app_store_publish
    app_store_connect:
      api_key: $APP_STORE_CONNECT_PRIVATE_KEY
      key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
      issuer_id: $APP_STORE_CONNECT_ISSUER_ID
  play_store_publish: &play_store_publish
    google_play:
      credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS_HOLDER
      track: $GOOGLE_PLAY_TRACK 
      submit_as_draft: true
  email_publish: &email_publish
    email: 
      recipients:
        - mohammed@nevercode.io
      notify:
        success: true
        failure: true
  artifacts:  
    - &ipa build/ios/ipa/*.ipa
    - &xcodelog /tmp/xcodebuild_logs/*.log
    - &flutterdrive flutter_drive.log
    - &testresults test-results/flutter.json
    - &dsym $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    - &apk build/**/outputs/**/*.apk
    - &aab build/**/outputs/**/*.aab



workflows:
  ios-dev-feature:
    name: iOS dev feature
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      << : *env_versions
      << : *ios_groups
      vars:
        << : *xcode_env_vars
        BUNDLE_ID: "io.codemagic.whitelabel.dev"
        APP_STORE_ID: 1638741667
        CLIENT_ID: "dev"
    triggering:
      << : *trigger_feature_pr
    scripts:
      - *install_dependencies
      - *install_pods
      - *ios_code_signing
      - *unit_tests
      - *build_ipa   
    artifacts: 
      - *ipa
      - *xcodelog
      - *testresults
    publishing:
      <<: *email_publish
      <<: *ios_app_store_publish
  ios-dev-release:
      name: iOS dev release
      instance_type: mac_mini_m1
      max_build_duration: 120
      environment:
        << : *env_versions
        << : *ios_groups
        vars:
          << : *xcode_env_vars
          BUNDLE_ID: "io.codemagic.whitelabel.dev"
          APP_STORE_ID: 1638741667
          CLIENT_ID: "dev"
      triggering:
        << : *trigger_dev
      scripts:
        - *install_dependencies
        - *install_pods
        - *ios_code_signing
        - *unit_tests
        - *build_ipa   
      artifacts: 
        - *ipa
        - *xcodelog
        - *testresults
      publishing:
        <<: *email_publish
        <<: *ios_app_store_publish
  ios-qa-release:
    name: iOS QA release
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      << : *env_versions
      << : *ios_groups
      vars:
        << : *xcode_env_vars
        BUNDLE_ID: "io.codemagic.whitelabel.qa"
        APP_STORE_ID: 1638868703
        CLIENT_ID: "qa"
    triggering:
      << : *trigger_qa
    scripts:
      - *install_dependencies
      - *install_pods
      - *set_bundle_id
      - *get_assets
      - *change_ios_icons
      - *ios_code_signing
      - *unit_tests
      - *build_ipa   
    artifacts: 
      - *ipa
      - *xcodelog
      - *testresults
    publishing:
      <<: *email_publish
      <<: *ios_app_store_publish

  trigger:
    name: Trigger
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      << : *env_versions
      << : *ios_groups
      vars:
        APP_ID: 62f12bd754bf379f7b80f532
        WORKFLOW_ID: ios-qa-client-release
    scripts:
      - name: Trigger Builds
        script: |
          CLIENTS=("001" "002" "003")
          for CLIENT in ${CLIENTS[@]}; do
            echo "CLIENT: $CLIENT"  
            curl -H "Content-Type: application/json" -H "x-auth-token: ${CM_API_KEY}" \
              --data '{
                "appId": "$APP_ID", 
                "workflowId": "$WORKFLOW_ID",
                "branch": "main",
                "environment": { 
                  "variables": { 
                    "CLIENT_ID": "'${CLIENT}'"
                   }
                }
              }' \
            https://api.codemagic.io/builds
          done

  # Builds will be triggered via REST API
  ios-client-release:
    name: iOS client release
    instance_type: mac_mini_m1
    max_build_duration: 120
    <<: *labels  
    environment:
      <<: *env_versions
      <<: *ios_groups
      vars:
        <<: *xcode_env_vars
        BASE_BUNDLE_ID: io.codemagic.whitelabel.dev
    scripts:
      - *get_assets
      - *set_ios_variables
      - *install_dependencies
      - *install_pods
      - *set_bundle_id
      - *set_client_id
      - *change_ios_icons
      - *set_image
      - *ios_code_signing
      - *build_ipa
    artifacts: 
      - *ipa
      - *xcodelog
      - *testresults
    publishing:      
      <<: *ios_app_store_publish
  
  android-client-release:
    name: Android client release
    instance_type: mac_mini_m1
    max_build_duration: 120
    <<: *labels
    environment:
      <<: *env_versions
      <<: *android_groups
      vars:
        <<: *env_vars
        CLIENT_ID: "004" # to be deleted
        GOOGLE_PLAY_TRACK: internal
        GCLOUD_SERVICE_ACCOUNT_CREDENTIALS_HOLDER: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
    scripts:
      - *get_assets
      - *set_android_variables
      - *install_dependencies
      - *set_package_name
      - *set_client_id
      - *change_android_icons
      - *set_image
      # - *android_code_signing
      # - *build_apk
      - *build_aab
    artifacts: 
      - *apk
      - *aab
    publishing:
      <<: *play_store_publish