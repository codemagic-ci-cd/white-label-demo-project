definitions:
  env_versions: &env_versions
    flutter: stable
    xcode: 14.1
    cocoapods: default    
  aws_group: &aws_group
    groups:
      - aws_credentials # Includes (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION)
  env_vars: &env_vars
    S3_BUCKET_NAME: cmwhitelabel # The name of your S3 bucket that have all of your clients assets.
    CLIENT_ASSETS_FOLDER: client_assets # The name of unzipped folder on the build machine that have the client assets.
    ANDROID_ASSETS_FOLDER: android_assets # The name of your folder in S3 bucket that have the client's Android assets from (/android/app/src/main/res/).
    IOS_ASSETS_FOLDER: ios_assets # The name of your folder in S3 bucket that have the client's iOS assets from (/ios/Runner/Assets.xcassets/).
  xcode_env_vars: &xcode_env_vars
    XCODE_WORKSPACE: "ios/Runner.xcworkspace"
    XCODE_SCHEME: "Runner"
  labels: &labels
    labels:
      - ${CLIENT_ID} # Helpful when you open your Codemagic's builds page   
  trigger_feature_pr: &trigger_feature_pr
    events:
      - pull_request
    branch_patterns:
      - pattern: develop
        include: true
        source: false
  trigger_dev: &trigger_dev
    events:
      - push
    branch_patterns:
      - pattern: develop
  trigger_qa: &trigger_qa
    events:
      - pull_request
    branch_patterns:
      - pattern: qa
        include: true
        source: true
  trigger_trigger: &trigger_trigger
    events:
      - pull_request
    branch_patterns:
      - pattern: trigger
        include: true
        source: true           
  scripts:
    - &install_dependencies
      name: Install dependencies
      script: flutter packages pub get
    - &unit_tests
      name: Unit tests
      script: |
        mkdir -p test-results
        flutter test --machine > test-results/flutter.json
    - &get_assets
      name: Get assets from AWS S3 bucket
      script: |
        echo "Client ID: ${CLIENT_ID}"
        aws s3 cp s3://$S3_BUCKET_NAME/assets_${CLIENT_ID}.zip assets.zip
        unzip assets.zip -d $CLIENT_ASSETS_FOLDER
    - &set_image # An image that being used in this sample project
      name: Set main image
      script: |
        rm -rf assets/hero.png
        cp -r ./$CLIENT_ASSETS_FOLDER/hero.png assets/hero.png
    - &set_client_id
      name: Set client id
      script: |
        cp -r ./$CLIENT_ASSETS_FOLDER/client.env assets/client.env
    
    - &set_ios_variables
      name: Set iOS environment variables from settings.env
      script: |
        source ./$CLIENT_ASSETS_FOLDER/settings.env

        echo "APP_STORE_CONNECT_KEY_IDENTIFIER=$APP_STORE_CONNECT_KEY_IDENTIFIER" >> $CM_ENV
        echo "APP_STORE_CONNECT_ISSUER_ID=$APP_STORE_CONNECT_ISSUER_ID" >> $CM_ENV

        echo "BUNDLE_ID=$BUNDLE_ID" >> $CM_ENV
        echo "APP_STORE_ID=$APP_STORE_ID" >> $CM_ENV

        echo "APP_STORE_CONNECT_PRIVATE_KEY<<DELIMITER" >> $CM_ENV
        echo "$APP_STORE_CONNECT_PRIVATE_KEY" >> $CM_ENV
        echo "DELIMITER" >> $CM_ENV

        echo "CERTIFICATE_PRIVATE_KEY<<DELIMITER" >> $CM_ENV
        echo "$CERTIFICATE_PRIVATE_KEY" >> $CM_ENV
        echo "DELIMITER" >> $CM_ENV

    - &install_pods
      name: Install pods
      script: find . -name "Podfile" -execdir pod install \;
    - &ios_code_signing
      name: iOS code signing
      script: |
        keychain initialize
        app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
        keychain add-certificates
        xcode-project use-profiles
    - &build_ipa
      name: Flutter build ipa and automatic versioning
      script: |
        BUILD_NUMBER=$$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1))
        flutter build ipa --release \
        --build-name=1.0.$BUILD_NUMBER \
        --build-number=$BUILD_NUMBER\
        --export-options-plist=/Users/builder/export_options.plist
    - &set_bundle_id
      name: Set bundle id
      script: |
        PBXPROJ=$CM_BUILD_DIR/ios/Runner.xcodeproj/project.pbxproj
        sed -i.bak "s/\$BASE_BUNDLE_ID/$BUNDLE_ID/g" $PBXPROJ
    - &change_ios_icons
      name: Change iOS icons
      script: |
        rm -rf ios/Runner/Assets.xcassets/AppIcon.appiconset
        cp -r ./$CLIENT_ASSETS_FOLDER/$IOS_ASSETS_FOLDER ios/Runner/Assets.xcassets/

  ios_app_store_publish: &ios_app_store_publish
    app_store_connect:
      api_key: $APP_STORE_CONNECT_PRIVATE_KEY
      key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
      issuer_id: $APP_STORE_CONNECT_ISSUER_ID
  email_publish: &email_publish
    email: 
      recipients:
        - name@mail.com
      notify:
        success: true
        failure: true
  artifacts:  
    - &ipa build/ios/ipa/*.ipa
    - &xcodelog /tmp/xcodebuild_logs/*.log
    - &flutterdrive flutter_drive.log
    - &testresults test-results/flutter.json
    - &dsym $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    - &apk build/**/outputs/**/*.apk
    - &aab build/**/outputs/**/*.aab



workflows:
  ios-dev-feature:
    name: iOS dev feature
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      <<: *aws_group
      vars:
        << : *xcode_env_vars
        BUNDLE_ID: "io.codemagic.whitelabel.dev"
        APP_STORE_ID: xxxxxxxxxx
        CLIENT_ID: "dev"
    triggering:
      << : *trigger_feature_pr
    scripts:
      - *install_dependencies
      - *install_pods
      - *ios_code_signing
      - *unit_tests
      - *build_ipa   
    artifacts: 
      - *ipa
      - *xcodelog
      - *testresults
    publishing:
      <<: *email_publish
      <<: *ios_app_store_publish

  ios-dev-release:
      name: iOS dev release
      instance_type: mac_mini_m1
      max_build_duration: 120
      environment:
        << : *env_versions
        << : *aws_group
        vars:
          << : *xcode_env_vars
          BUNDLE_ID: "io.codemagic.whitelabel.dev"
          APP_STORE_ID: xxxxxxxxxx
          CLIENT_ID: "dev"
      triggering:
        << : *trigger_dev
      scripts:
        - *install_dependencies
        - *install_pods
        - *ios_code_signing
        - *unit_tests
        - *build_ipa   
      artifacts: 
        - *ipa
        - *xcodelog
        - *testresults
      publishing:
        <<: *email_publish
        <<: *ios_app_store_publish

  ios-qa-release:
    name: iOS QA release
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      <<: *aws_group
      vars:
        << : *xcode_env_vars
        BUNDLE_ID: "io.codemagic.whitelabel.qa"
        APP_STORE_ID: xxxxxxxxxx
        CLIENT_ID: "qa"
    triggering:
      << : *trigger_qa
    scripts:
      - *install_dependencies
      - *install_pods
      - *set_bundle_id
      - *get_assets
      - *change_ios_icons
      - *ios_code_signing
      - *unit_tests
      - *build_ipa   
    artifacts: 
      - *ipa
      - *xcodelog
      - *testresults
    publishing:
      <<: *email_publish
      <<: *ios_app_store_publish

  trigger:
    name: Trigger
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      << : *env_versions
      << : *aws_group
      vars:
        APP_ID: xxxxxxxxxx
        WORKFLOW_ID: ios-qa-client-release
    scripts:
      - name: Trigger Builds
        script: |
          CLIENTS=("001" "002" "003")
          for CLIENT in ${CLIENTS[@]}; do
            echo "CLIENT: $CLIENT"  
            curl -H "Content-Type: application/json" -H "x-auth-token: ${CM_API_KEY}" \
              --data '{
                "appId": "$APP_ID", 
                "workflowId": "$WORKFLOW_ID",
                "branch": "main",
                "environment": { 
                  "variables": { 
                    "CLIENT_ID": "'${CLIENT}'"
                   }
                }
              }' \
            https://api.codemagic.io/builds
          done